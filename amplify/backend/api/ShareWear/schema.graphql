enum Type {
  ORGANISATION
  PERSONAL
  BUSINESS
}

enum Status {
  AVAILABLE
  EXPIRED
  PENDING
  FUFILLED
}

type Tag @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String!
  donationrequestID: ID! @index(name: "byDonationRequest")
}

type Donation @model @auth(rules: [{allow: public}]) {
  id: ID!
  timestamp: AWSDateTime
  DonationItems: [DonationItem] @hasMany(indexName: "byDonation", fields: ["id"])
  donorID: ID! @index(name: "byDonor")
  beneficiaryID: ID! @index(name: "byBeneficiary")
  status: Status
}

type Category @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String!
}

type DonationItem @model @auth(rules: [{allow: public}]) {
  id: ID!
  donationID: ID! @index(name: "byDonation")
  itemID: ID! @index(name: "byItem")
  Item: Item @belongsTo(fields: ["itemID"])
}

type Item @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String!
  quantity: Int!
  Category: Category @hasOne
  donationrequestID: ID! @index(name: "byDonationRequest")
  DonationItems: [DonationItem] @hasMany(indexName: "byItem", fields: ["id"])
  beneficiaryID: ID! @index(name: "byBeneficiary")
}

type Donor @model @auth(rules: [{allow: public}]) {
  id: ID!
  firstName: String!
  lastName: String!
  email: AWSEmail!
  Donations: [Donation] @hasMany(indexName: "byDonor", fields: ["id"])
}

type Beneficiary @model @auth(rules: [{allow: public}]) {
  id: ID!
  firstName: String!
  lastName: String!
  email: AWSEmail!
  type: Type!
  Donations: [Donation] @hasMany(indexName: "byBeneficiary", fields: ["id"])
  DonationRequests: [DonationRequest] @hasMany(indexName: "byBeneficiary", fields: ["id"])
  Items: [Item] @hasMany(indexName: "byBeneficiary", fields: ["id"])
}

type DonationRequest @model @auth(rules: [{allow: public}]) {
  id: ID!
  Tags: [Tag] @hasMany(indexName: "byDonationRequest", fields: ["id"])
  headline: String!
  description: String!
  images: [AWSURL!]
  Items: [Item] @hasMany(indexName: "byDonationRequest", fields: ["id"])
  beneficiaryID: ID! @index(name: "byBeneficiary")
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime
  lng: Float
  lat: Float
}
 